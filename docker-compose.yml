version: '2'
services:
  
  api-gateway:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
    build: ./Api-Gateway
    container_name: api-gateway
    image: api
    ports:
      - 8090:8090
  
  persistence:
    environment:
      MONGO_URI: mongodb
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
    build: ./persistence-manager
    container_name: persistence
    image: persistence
    ports:
      - 8055:8055
   
      
  reporting-service:     
    build: ./ReportingService
    container_name: reporting-service
    image: reporting-service
    ports: 
      - "8040:8040"
    environment:
      CASSANDRA_HOST: cassandra_db1
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka

  

  user-persistence:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
    build: ./user-persistence
    container_name: user-persistence
    image: user_persistence
    ports:
      - 8088:8088
      
  auth-service:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
    build: ./Authentication_server
    container_name: auth-service
    image: auth-service
    ports:
      - 5000:5000
    
      

  job-manager:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
    build: ./JobManager
    container_name: job-manager
    image: job-manager
    ports:
      - 8021:8021
 
  job-scheduler: 
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
      REDIS_URL: redis
    build: ./Engine_dw-job-scheduler
    container_name: job-scheduler
    image: job-scheduler
    ports: 
      - "8060:8060"
    restart: always

 
  results-processor: 
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
      REDIS_URL: redis
    build: ./Engine_dw-results-processor
    container_name: results-processor
    image: results-processor
    ports:
      - "8065:8065"
    restart: always

  state-initializer: 
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
      REDIS_URL: redis
    build: ./Engine_dw-state-initializer
    container_name: state-initializer
    image: state-initializer
    ports: 
      - "8078:8078"
    restart: always

  task-scheduler:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka 
    build: ./Engine_dw-task-scheduler
    container_name: task-scheduler
    image: task-scheduler
    ports: 
      - "7687:7687"

  socket-service:
    environment:
      EUREKA_URL: eureka
      CONFIG_URL: config
      KAFKA_URL: kafka
    build: ./SocketService
    container_name: socket-service
    image: socket-service
    ports:
      - "3000:3000"
